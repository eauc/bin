Submodules
==========

Init
----

git submodule add <remote_repository> <path/to/submodule>
  add the given repository at the given path.

git clone <remote_repository> <path>
git submodule init      # copies submodules config from .gitmodules to .git/config
git submodule update
 OR
git clone <remote_repository> <path>
git submodule update --init
 OR
git clone --recursive <remote_repository> <path>
  clone & initialize a git repos with submodules


Status
------

git submodule status
  display HEADs of all submodules
	- if module is uninitialized
	+ if module HEAD is not the recorder SHA1 in parent repos
	U if module has merge conflicts

git submodule summary <commit=HEAD>               # commit-working
git submodule summary --cached <commit=HEAD>      # commit-index
git submodule summary --files                     # index-submodule's HEAD
  display log between parent <commit/index>'s SHA1 and SHA1 in <index/submodule's HEAD> for each submodule
	(git diff with config submodule=log)


Update
------

  (git refuse to update module if there are local uncommited changes)

git update
  update submodules to SHA1 in .gitmodules file
git update --remote
  update submodules to SHA1 of current branch's upstream

git update --checkout     # default
  update submodules by checking out SHA1 in detached HEAD state
git update --merge
  update submodules by merging SHA1 into active module branch
git update --rebase
  update submodules by rebasing module's current branch onto SHA1


Commit
------

git add <submodule/path>
  add current submodule SHA1 to parent repos' index

git commit       # in repos with submodules
  commit in parent repos includes changes to submodules SHA1


Push
----

git push --recurse-submodules=check
  push parent repos, fails if submodules SHA1s includes unpushed commits

git push --recurse-submodules=on-demand
  push parent repose, pushes submodules if SHA1 includes unpushed commits


Foreach
-------

git submodule foreach <cmd>
  runs <cmd> in each submodule
  the command has access to the variables $name, $path, $sha1 and $toplevel

Config
------

git config --global diff.submodule log
  add submodules log to diff

git config --global status.submodulesummary 1
  add submodules summary to status

git config -f .gitmodules submodule.<module>.branch <branch_name>
  set the branch used by "update --remote" to calculate SHA1 to update to


Delete
------

Removing submodules
   1. Delete the relevant line from the .gitmodules file.
   2. Delete the relevant section from .git/config.
   3. Run git rm --cached <path_to_submodule>    # (no trailing slash).
   4. Commit and delete the now untracked submodule files.
